# coding: utf-8

"""
    Dalet Metadata Analysis API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.1.0
    Contact: cortexsupport@dalet.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import metadataanalysis_client
from metadataanalysis_client.models.translate_captions_request import TranslateCaptionsRequest  # noqa: E501
from metadataanalysis_client.rest import ApiException

class TestTranslateCaptionsRequest(unittest.TestCase):
    """TranslateCaptionsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TranslateCaptionsRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = metadataanalysis_client.models.translate_captions_request.TranslateCaptionsRequest()  # noqa: E501
        if include_optional :
            return TranslateCaptionsRequest(
                source_subtitle = metadataanalysis_client.models.locator.Locator(
                    aws_s3_bucket = '0', 
                    aws_s3_key = '0', 
                    http_endpoint = '0', ), 
                output_location = metadataanalysis_client.models.translate_captions_response.TranslateCaptionsResponse(
                    ttml_file = metadataanalysis_client.models.locator.Locator(
                        aws_s3_bucket = '0', 
                        aws_s3_key = '0', 
                        http_endpoint = '0', ), 
                    text_file = metadataanalysis_client.models.locator.Locator(
                        aws_s3_bucket = '0', 
                        aws_s3_key = '0', 
                        http_endpoint = '0', ), ), 
                target_language = '0', 
                skeleton_mode = True, 
                source_language = '0'
            )
        else :
            return TranslateCaptionsRequest(
                source_subtitle = metadataanalysis_client.models.locator.Locator(
                    aws_s3_bucket = '0', 
                    aws_s3_key = '0', 
                    http_endpoint = '0', ),
                output_location = metadataanalysis_client.models.translate_captions_response.TranslateCaptionsResponse(
                    ttml_file = metadataanalysis_client.models.locator.Locator(
                        aws_s3_bucket = '0', 
                        aws_s3_key = '0', 
                        http_endpoint = '0', ), 
                    text_file = metadataanalysis_client.models.locator.Locator(
                        aws_s3_bucket = '0', 
                        aws_s3_key = '0', 
                        http_endpoint = '0', ), ),
                target_language = '0',
                skeleton_mode = True,
        )

    def testTranslateCaptionsRequest(self):
        """Test TranslateCaptionsRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
